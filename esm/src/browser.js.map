{"version":3,"file":"browser.js","sourceRoot":"","sources":["../../../../../modules/@angular/platform-browser/src/browser.ts"],"names":[],"mappings":"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","sourcesContent":["import {COMMON_DIRECTIVES, COMMON_PIPES, FORM_PROVIDERS, PlatformLocation} from '@angular/common';\nimport {COMPILER_PROVIDERS, XHR} from '@angular/compiler';\nimport {APPLICATION_COMMON_PROVIDERS, ComponentRef, ExceptionHandler, OpaqueToken, PLATFORM_COMMON_PROVIDERS, PLATFORM_DIRECTIVES, PLATFORM_INITIALIZER, PLATFORM_PIPES, PlatformRef, ReflectiveInjector, RootRenderer, Testability, Type, assertPlatform, coreLoadAndBootstrap, createPlatform, getPlatform} from '@angular/core';\n\nimport {AnimationDriver, NoOpAnimationDriver, ReflectionCapabilities, SanitizationService, reflector, wtfInit} from '../core_private';\nimport {WebAnimationsDriver} from '../src/dom/web_animations_driver';\n\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {BrowserPlatformLocation} from './browser/location/browser_platform_location';\nimport {BrowserGetTestability} from './browser/testability';\nimport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nimport {getDOM} from './dom/dom_adapter';\nimport {DomRootRenderer, DomRootRenderer_} from './dom/dom_renderer';\nimport {DOCUMENT} from './dom/dom_tokens';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nimport {HAMMER_GESTURE_CONFIG, HammerGestureConfig, HammerGesturesPlugin} from './dom/events/hammer_gestures';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {DomSharedStylesHost, SharedStylesHost} from './dom/shared_styles_host';\nimport {isBlank, isPresent} from './facade/lang';\nimport {DomSanitizationService, DomSanitizationServiceImpl} from './security/dom_sanitization_service';\nimport {CachedXHR} from './xhr/xhr_cache';\nimport {XHRImpl} from './xhr/xhr_impl';\n\nexport const CACHED_TEMPLATE_PROVIDER: Array<any /*Type | Provider | any[]*/> =\n    [{provide: XHR, useClass: CachedXHR}];\n\nconst BROWSER_PLATFORM_MARKER = new OpaqueToken('BrowserPlatformMarker');\n\n/**\n * A set of providers to initialize the Angular platform in a web browser.\n *\n * Used automatically by `bootstrap`, or can be passed to {@link platform}.\n */\nexport const BROWSER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  {provide: BROWSER_PLATFORM_MARKER, useValue: true}, PLATFORM_COMMON_PROVIDERS,\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: PlatformLocation, useClass: BrowserPlatformLocation}\n];\n\nexport const BROWSER_SANITIZATION_PROVIDERS: Array<any> = [\n  {provide: SanitizationService, useExisting: DomSanitizationService},\n  {provide: DomSanitizationService, useClass: DomSanitizationServiceImpl},\n];\n\n/**\n * A set of providers to initialize an Angular application in a web browser.\n *\n * Used automatically by `bootstrap`, or can be passed to {@link PlatformRef.application}.\n */\nexport const BROWSER_APP_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  APPLICATION_COMMON_PROVIDERS, FORM_PROVIDERS, BROWSER_SANITIZATION_PROVIDERS,\n  {provide: PLATFORM_PIPES, useValue: COMMON_PIPES, multi: true},\n  {provide: PLATFORM_DIRECTIVES, useValue: COMMON_DIRECTIVES, multi: true},\n  {provide: ExceptionHandler, useFactory: _exceptionHandler, deps: []},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n  {provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true},\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true},\n  {provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true},\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig},\n  {provide: DomRootRenderer, useClass: DomRootRenderer_},\n  {provide: RootRenderer, useExisting: DomRootRenderer},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {provide: AnimationDriver, useFactory: _resolveDefaultAnimationDriver}, DomSharedStylesHost,\n  Testability, EventManager, ELEMENT_PROBE_PROVIDERS\n];\n\nexport const BROWSER_APP_COMPILER_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  COMPILER_PROVIDERS,\n  {provide: XHR, useClass: XHRImpl},\n];\n\nexport function browserPlatform(): PlatformRef {\n  if (isBlank(getPlatform())) {\n    createPlatform(ReflectiveInjector.resolveAndCreate(BROWSER_PLATFORM_PROVIDERS));\n  }\n  return assertPlatform(BROWSER_PLATFORM_MARKER);\n}\n\n/**\n * Bootstrapping for Angular applications.\n *\n * You instantiate an Angular application by explicitly specifying a component to use\n * as the root component for your application via the `bootstrap()` method.\n *\n * ## Simple Example\n *\n * Assuming this `index.html`:\n *\n * ```html\n * <html>\n *   <!-- load Angular script tags here. -->\n *   <body>\n *     <my-app>loading...</my-app>\n *   </body>\n * </html>\n * ```\n *\n * An application is bootstrapped inside an existing browser DOM, typically `index.html`.\n * Unlike Angular 1, Angular 2 does not compile/process providers in `index.html`. This is\n * mainly for security reasons, as well as architectural changes in Angular 2. This means\n * that `index.html` can safely be processed using server-side technologies such as\n * providers. Bindings can thus use double-curly `{{ syntax }}` without collision from\n * Angular 2 component double-curly `{{ syntax }}`.\n *\n * We can use this script code:\n *\n * {@example core/ts/bootstrap/bootstrap.ts region='bootstrap'}\n *\n * When the app developer invokes `bootstrap()` with the root component `MyApp` as its\n * argument, Angular performs the following tasks:\n *\n *  1. It uses the component's `selector` property to locate the DOM element which needs\n *     to be upgraded into the angular component.\n *  2. It creates a new child injector (from the platform injector). Optionally, you can\n *     also override the injector configuration for an app by invoking `bootstrap` with the\n *     `componentInjectableBindings` argument.\n *  3. It creates a new `Zone` and connects it to the angular application's change detection\n *     domain instance.\n *  4. It creates an emulated or shadow DOM on the selected component's host element and loads the\n *     template into it.\n *  5. It instantiates the specified component.\n *  6. Finally, Angular performs change detection to apply the initial data providers for the\n *     application.\n *\n *\n * ## Bootstrapping Multiple Applications\n *\n * When working within a browser window, there are many singleton resources: cookies, title,\n * location, and others. Angular services that represent these resources must likewise be\n * shared across all Angular applications that occupy the same browser window. For this\n * reason, Angular creates exactly one global platform object which stores all shared\n * services, and each angular application injector has the platform injector as its parent.\n *\n * Each application has its own private injector as well. When there are multiple\n * applications on a page, Angular treats each application injector's services as private\n * to that application.\n *\n * ## API\n *\n * - `appComponentType`: The root component which should act as the application. This is\n *   a reference to a `Type` which is annotated with `@Component(...)`.\n * - `customProviders`: An additional set of providers that can be added to the\n *   app injector to override default injection behavior.\n *\n * Returns a `Promise` of {@link ComponentRef}.\n */\nexport function bootstrap(\n    appComponentType: Type,\n    customProviders?: Array<any /*Type | Provider | any[]*/>): Promise<ComponentRef<any>> {\n  reflector.reflectionCapabilities = new ReflectionCapabilities();\n  let providers = [\n    BROWSER_APP_PROVIDERS, BROWSER_APP_COMPILER_PROVIDERS,\n    isPresent(customProviders) ? customProviders : []\n  ];\n  var appInjector = ReflectiveInjector.resolveAndCreate(providers, browserPlatform().injector);\n  return coreLoadAndBootstrap(appComponentType, appInjector);\n}\n\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  wtfInit();\n  BrowserGetTestability.init();\n}\n\nfunction _exceptionHandler(): ExceptionHandler {\n  return new ExceptionHandler(getDOM());\n}\n\nfunction _document(): any {\n  return getDOM().defaultDoc();\n}\n\nfunction _resolveDefaultAnimationDriver(): AnimationDriver {\n  if (getDOM().supportsWebAnimation()) {\n    return new WebAnimationsDriver();\n  }\n  return new NoOpAnimationDriver();\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
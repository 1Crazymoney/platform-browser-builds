{"version":3,"file":"ng_probe.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser/src/dom/debug/ng_probe.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,KAAK,IAAI,MAAM,eAAe;OAE9B,EAAC,gBAAgB,EAAC,MAAM,yBAAyB;OACjD,EAAC,oBAAoB,EAAC,MAAM,2BAA2B;OACvD,EAAC,MAAM,EAAC,MAAM,gBAAgB;OAC9B,EAAC,eAAe,EAAC,MAAM,iBAAiB;AAE/C,IAAM,WAAW,GAAG;IAClB,gBAAgB,EAAE,IAAI,CAAC,cAAc;IACrC,QAAQ,EAAE,IAAI,CAAC,MAAM;CACtB,CAAC;AAEF,IAAM,mBAAmB,GAAG,UAAU,CAAC;AACvC,IAAM,uBAAuB,GAAG,eAAe,CAAC;AAEhD;;;;GAIG;AACH,qCAAqC,OAAY;IAC/C,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AACpC,CAAC;AAED;;;GAGG;AACH;IACE,sBAAmB,IAAY,EAAS,KAAU;QAA/B,SAAI,GAAJ,IAAI,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAK;IAAG,CAAC;IACxD,mBAAC;AAAD,CAAC,AAFD,IAEC;AAGD,+CACI,YAAiB,EAAE,WAA2B,EAAE,UAA+B;IACjF,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE;QACnB,mBAAmB,CAAC,YAAY,EAAE,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC;QAC/E,YAAY,CAAC;AACnB,CAAC;AAED,6BAA6B,YAAiB,EAAE,WAA2B;IACzE,MAAM,EAAE,CAAC,YAAY,CAAC,mBAAmB,EAAE,oBAAoB,CAAC,CAAC;IACjE,MAAM,EAAE,CAAC,YAAY,CACjB,uBAAuB,EACvB,gBAAgB,CAAC,KAAK,CAAC,WAAW,EAAE,mBAAmB,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACjF,MAAM,CAAC,IAAI,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAChD,CAAC;AAED,6BAA6B,MAAsB;IACjD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,IAAS,EAAE,CAAM,IAAK,OAAA,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,EAA9B,CAA8B,EAAE,EAAE,CAAC,CAAC;AAClF,CAAC;AAED;;GAEG;AACH,OAAO,IAAM,uBAAuB,GAAoB,CAAC;QACvD,OAAO,EAAE,IAAI,CAAC,YAAY;QAC1B,UAAU,EAAE,8BAA8B;QAC1C,IAAI,EAAE;YACJ,eAAe,EAAE,CAAC,YAAY,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YACpD,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;SACzC;KACF,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as core from '@angular/core';\n\nimport {StringMapWrapper} from '../../facade/collection';\nimport {DebugDomRootRenderer} from '../../private_import_core';\nimport {getDOM} from '../dom_adapter';\nimport {DomRootRenderer} from '../dom_renderer';\n\nconst CORE_TOKENS = {\n  'ApplicationRef': core.ApplicationRef,\n  'NgZone': core.NgZone,\n};\n\nconst INSPECT_GLOBAL_NAME = 'ng.probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'ng.coreTokens';\n\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nexport function inspectNativeElement(element: any): core.DebugNode {\n  return core.getDebugNode(element);\n}\n\n/**\n * Deprecated. Use the one from '@angular/core'.\n * @deprecated\n */\nexport class NgProbeToken {\n  constructor(public name: string, public token: any) {}\n}\n\n\nexport function _createConditionalRootRenderer(\n    rootRenderer: any, extraTokens: NgProbeToken[], coreTokens: core.NgProbeToken[]) {\n  return core.isDevMode() ?\n      _createRootRenderer(rootRenderer, (extraTokens || []).concat(coreTokens || [])) :\n      rootRenderer;\n}\n\nfunction _createRootRenderer(rootRenderer: any, extraTokens: NgProbeToken[]) {\n  getDOM().setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n  getDOM().setGlobalVar(\n      CORE_TOKENS_GLOBAL_NAME,\n      StringMapWrapper.merge(CORE_TOKENS, _ngProbeTokensToMap(extraTokens || [])));\n  return new DebugDomRootRenderer(rootRenderer);\n}\n\nfunction _ngProbeTokensToMap(tokens: NgProbeToken[]): {[name: string]: any} {\n  return tokens.reduce((prev: any, t: any) => (prev[t.name] = t.token, prev), {});\n}\n\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nexport const ELEMENT_PROBE_PROVIDERS: core.Provider[] = [{\n  provide: core.RootRenderer,\n  useFactory: _createConditionalRootRenderer,\n  deps: [\n    DomRootRenderer, [NgProbeToken, new core.Optional()],\n    [core.NgProbeToken, new core.Optional()]\n  ]\n}];\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
{"version":3,"file":"dom_test_component_renderer.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-browser/testing/dom_test_component_renderer.ts"],"names":[],"mappings":";;;;;;AAAA,wBAAoC,2BAA2B,CAAC,CAAA;AAChE,qBAAiC,eAAe,CAAC,CAAA;AAEjD,4BAAqB,wBAAwB,CAAC,CAAA;AAC9C,2BAAuB,uBAAuB,CAAC,CAAA;AAE/C,6BAAiB,gBAAgB,CAAC,CAAA;AAClC;IAA8C,4CAAqB;IACjE,kCAAqB,IAAS,CAAC,iBAAiB;QAAI,iBAAO,CAAC;QAAvC,SAAI,GAAJ,IAAI,CAAK;IAA+B,CAAC;IAE9D,oDAAiB,GAAjB,UAAkB,QAAgB;QAChC,IAAI,MAAM,GAAG,iBAAE,CAAC,eAAY,QAAQ,cAAU,CAAC,CAAC;QAEhD,8CAA8C;QAC9C,IAAI,QAAQ,GAAG,oBAAM,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QAClE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACzC,oBAAM,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC;QACD,oBAAM,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC/C,CAAC;IACH,kBAAkB;IACX,mCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,uCAAc,GAA2D;QAChF,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,IAAI,EAAE,CAAC,qBAAQ,EAAG,EAAE,EAAG,EAAC;KACtE,CAAC;IACF,+BAAC;AAAD,CAAC,AArBD,CAA8C,+BAAqB,GAqBlE;AArBY,gCAAwB,2BAqBpC,CAAA","sourcesContent":["import {TestComponentRenderer} from '@angular/compiler/testing';\nimport {Inject, Injectable} from '@angular/core';\n\nimport {getDOM} from '../src/dom/dom_adapter';\nimport {DOCUMENT} from '../src/dom/dom_tokens';\n\nimport {el} from './browser_util';\nexport class DOMTestComponentRenderer extends TestComponentRenderer {\n  constructor( private _doc: any /** TODO #9100 */) { super(); }\n\n  insertRootElement(rootElId: string) {\n    let rootEl = el(`<div id=\"${rootElId}\"></div>`);\n\n    // TODO(juliemr): can/should this be optional?\n    let oldRoots = getDOM().querySelectorAll(this._doc, '[id^=root]');\n    for (let i = 0; i < oldRoots.length; i++) {\n      getDOM().remove(oldRoots[i]);\n    }\n    getDOM().appendChild(this._doc.body, rootEl);\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
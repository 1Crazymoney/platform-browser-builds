{"version":3,"file":"browser.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-browser/testing/browser.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAGH,qBAAoL,eAAe,CAAC,CAAA;AAEpM,wBAAmD,gBAAgB,CAAC,CAAA;AACpE,gCAAgC,gCAAgC,CAAC,CAAA;AACjE,iCAA8B,6BAA6B,CAAC,CAAA;AAC5D,yBAAsC,2BAA2B,CAAC,CAAA;AAElE,6BAA+B,gBAAgB,CAAC,CAAA;AAEhD,IAAM,4BAA4B,GAAG,IAAI,kBAAW,CAAC,2BAA2B,CAAC,CAAC;AAElF;IACE,mCAAiB,CAAC,WAAW,EAAE,CAAC;IAChC,+BAAgB,CAAC,KAAK,EAAE,CAAC;AAC3B,CAAC;AAED;IACE,MAAM,CAAC,IAAI,aAAM,CAAC,EAAC,oBAAoB,EAAE,IAAI,EAAC,CAAC,CAAC;AAClD,CAAC;AAED,IAAM,+BAA+B,GAA2C;IAC9E,gCAAyB,EAAE,EAAC,OAAO,EAAE,4BAA4B,EAAE,QAAQ,EAAE,IAAI,EAAC;IAClF,EAAC,OAAO,EAAE,2BAAoB,EAAE,QAAQ,EAAE,gBAAgB,EAAE,KAAK,EAAE,IAAI,EAAC;CACzE,CAAC;AAEF;;;;GAIG;AACH;IACE,EAAE,CAAC,CAAC,CAAC,kBAAW,EAAE,CAAC,CAAC,CAAC;QACnB,qBAAc,CAAC,yBAAkB,CAAC,gBAAgB,CAAC,+BAA+B,CAAC,CAAC,CAAC;IACvF,CAAC;IACD,MAAM,CAAC,qBAAc,CAAC,4BAA4B,CAAC,CAAC;AACtD,CAAC;AALe,2BAAmB,sBAKlC,CAAA;AACD;IAAA;IAYA,CAAC;IAXD,kBAAkB;IACX,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,OAAO,EAAE,CAAC,uBAAa,CAAC;oBACxB,SAAS,EAAE;wBACT,EAAC,OAAO,EAAE,aAAM,EAAE,QAAQ,EAAE,GAAG,EAAC,EAAE,kCAAuB;wBACzD,EAAC,OAAO,EAAE,aAAM,EAAE,UAAU,EAAE,YAAY,EAAC;wBAC3C,EAAC,OAAO,EAAE,kCAAe,EAAE,QAAQ,EAAE,kCAAe,CAAC,IAAI,EAAC;qBAC3D;iBACF,EAAG,EAAE;KACL,CAAC;IACF,wBAAC;AAAD,CAAC,AAZD,IAYC;AAZY,yBAAiB,oBAY7B,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationStrategy} from '@angular/common';\nimport {APP_ID, AppModule, NgZone, OpaqueToken, PLATFORM_COMMON_PROVIDERS, PLATFORM_INITIALIZER, PlatformRef, ReflectiveInjector, assertPlatform, createPlatform, getPlatform} from '@angular/core';\n\nimport {BROWSER_APP_PROVIDERS, BrowserModule} from '../src/browser';\nimport {BrowserDomAdapter} from '../src/browser/browser_adapter';\nimport {AnimationDriver} from '../src/dom/animation_driver';\nimport {ELEMENT_PROBE_PROVIDERS} from '../src/dom/debug/ng_probe';\n\nimport {BrowserDetection} from './browser_util';\n\nconst BROWSER_TEST_PLATFORM_MARKER = new OpaqueToken('BrowserTestPlatformMarker');\n\nfunction initBrowserTests() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserDetection.setup();\n}\n\nfunction createNgZone(): NgZone {\n  return new NgZone({enableLongStackTrace: true});\n}\n\nconst TEST_BROWSER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  PLATFORM_COMMON_PROVIDERS, {provide: BROWSER_TEST_PLATFORM_MARKER, useValue: true},\n  {provide: PLATFORM_INITIALIZER, useValue: initBrowserTests, multi: true}\n];\n\n/**\n * Platform for testing\n *\n * @experimental API related to bootstrapping are still under review.\n */\nexport function browserTestPlatform(): PlatformRef {\n  if (!getPlatform()) {\n    createPlatform(ReflectiveInjector.resolveAndCreate(TEST_BROWSER_PLATFORM_PROVIDERS));\n  }\n  return assertPlatform(BROWSER_TEST_PLATFORM_MARKER);\n}\nexport class BrowserTestModule {\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: AppModule, args: [{\n  modules: [BrowserModule],\n  providers: [\n    {provide: APP_ID, useValue: 'a'}, ELEMENT_PROBE_PROVIDERS,\n    {provide: NgZone, useFactory: createNgZone},\n    {provide: AnimationDriver, useValue: AnimationDriver.NOOP}\n  ]\n}, ] },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
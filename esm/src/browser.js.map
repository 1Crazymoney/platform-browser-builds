{"version":3,"file":"browser.js","sourceRoot":"","sources":["../../../../../modules/@angular/platform-browser/src/browser.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {COMMON_DIRECTIVES, COMMON_PIPES, PlatformLocation} from '@angular/common';\nimport {APPLICATION_COMMON_PROVIDERS, AppModule, AppModuleFactory, AppModuleRef, ExceptionHandler, NgZone, OpaqueToken, PLATFORM_COMMON_PROVIDERS, PLATFORM_INITIALIZER, PlatformRef, ReflectiveInjector, RootRenderer, SanitizationService, Testability, assertPlatform, createPlatform, getPlatform, isDevMode} from '@angular/core';\n\nimport {wtfInit} from '../core_private';\nimport {AnimationDriver} from '../src/dom/animation_driver';\nimport {WebAnimationsDriver} from '../src/dom/web_animations_driver';\n\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {BrowserPlatformLocation} from './browser/location/browser_platform_location';\nimport {BrowserGetTestability} from './browser/testability';\nimport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nimport {getDOM} from './dom/dom_adapter';\nimport {DomRootRenderer, DomRootRenderer_} from './dom/dom_renderer';\nimport {DOCUMENT} from './dom/dom_tokens';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nimport {HAMMER_GESTURE_CONFIG, HammerGestureConfig, HammerGesturesPlugin} from './dom/events/hammer_gestures';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {DomSharedStylesHost, SharedStylesHost} from './dom/shared_styles_host';\nimport {isBlank} from './facade/lang';\nimport {DomSanitizationService, DomSanitizationServiceImpl} from './security/dom_sanitization_service';\n\nconst BROWSER_PLATFORM_MARKER = new OpaqueToken('BrowserPlatformMarker');\n\n/**\n * A set of providers to initialize the Angular platform in a web browser.\n *\n * Used automatically by `bootstrap`, or can be passed to {@link platform}.\n *\n * @experimental API related to bootstrapping are still under review.\n */\nexport const BROWSER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  {provide: BROWSER_PLATFORM_MARKER, useValue: true}, PLATFORM_COMMON_PROVIDERS,\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: PlatformLocation, useClass: BrowserPlatformLocation}\n];\n\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * @experimental\n */\nexport const BROWSER_SANITIZATION_PROVIDERS: Array<any> = [\n  {provide: SanitizationService, useExisting: DomSanitizationService},\n  {provide: DomSanitizationService, useClass: DomSanitizationServiceImpl},\n];\n\n/**\n * A set of providers to initialize an Angular application in a web browser.\n *\n * Used automatically by `bootstrap`, or can be passed to {@link PlatformRef.application}.\n *\n * @experimental API related to bootstrapping are still under review.\n */\nexport const BROWSER_APP_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  APPLICATION_COMMON_PROVIDERS, BROWSER_SANITIZATION_PROVIDERS,\n  {provide: ExceptionHandler, useFactory: _exceptionHandler, deps: []},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n  {provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true},\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true},\n  {provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true},\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig},\n  {provide: DomRootRenderer, useClass: DomRootRenderer_},\n  {provide: RootRenderer, useExisting: DomRootRenderer},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {provide: AnimationDriver, useFactory: _resolveDefaultAnimationDriver}, DomSharedStylesHost,\n  Testability, EventManager, ELEMENT_PROBE_PROVIDERS\n];\n\n/**\n * @experimental API related to bootstrapping are still under review.\n */\nexport function browserPlatform(): PlatformRef {\n  if (isBlank(getPlatform())) {\n    createPlatform(ReflectiveInjector.resolveAndCreate(BROWSER_PLATFORM_PROVIDERS));\n  }\n  return assertPlatform(BROWSER_PLATFORM_MARKER);\n}\n\nexport function initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  wtfInit();\n  BrowserGetTestability.init();\n}\n\nexport function _exceptionHandler(): ExceptionHandler {\n  return new ExceptionHandler(getDOM());\n}\n\nexport function _document(): any {\n  return getDOM().defaultDoc();\n}\n\nexport function _resolveDefaultAnimationDriver(): AnimationDriver {\n  if (getDOM().supportsWebAnimation()) {\n    return new WebAnimationsDriver();\n  }\n  return AnimationDriver.NOOP;\n}\nexport class BrowserModule {\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: AppModule, args: [{\n  providers: [\n    BROWSER_APP_PROVIDERS,\n  ],\n  directives: COMMON_DIRECTIVES,\n  pipes: COMMON_PIPES\n}, ] },\n];\n}\n\n/**\n * Creates an instance of an `@AppModule` for the browser platform\n * for offline compilation.\n *\n * ## Simple Example\n *\n * ```typescript\n * my_module.ts:\n *\n * @AppModule({\n *   modules: [BrowserModule]\n * })\n * class MyModule {}\n *\n * main.ts:\n * import {MyModuleNgFactory} from './my_module.ngfactory';\n * import {bootstrapModuleFactory} from '@angular/platform-browser';\n *\n * let moduleRef = bootstrapModuleFactory(MyModuleNgFactory);\n * ```\n * @stable\n */\nexport function bootstrapModuleFactory<M>(moduleFactory: AppModuleFactory<M>): AppModuleRef<M> {\n  let platformInjector = browserPlatform().injector;\n  // Note: We need to create the NgZone _before_ we instantiate the module,\n  // as instantiating the module creates some providers eagerly.\n  // So we create a mini parent injector that just contains the new NgZone and\n  // pass that as parent to the AppModuleFactory.\n  let ngZone = new NgZone({enableLongStackTrace: isDevMode()});\n  let ngZoneInjector =\n      ReflectiveInjector.resolveAndCreate([{provide: NgZone, useValue: ngZone}], platformInjector);\n  return ngZone.run(() => { return moduleFactory.create(ngZoneInjector); });\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
{"version":3,"file":"platform-browser-animations.umd.js","sources":["../../../../packages/platform-browser/animations/src/module.ts","../../../../packages/platform-browser/animations/src/providers.ts","../../../../packages/platform-browser/animations/src/animation_renderer.ts","../../../../packages/platform-browser/animations/src/animation_builder.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {BROWSER_ANIMATIONS_PROVIDERS, BROWSER_NOOP_ANIMATIONS_PROVIDERS} from './providers';\n/**\n * \\@experimental Animation support is experimental.\n */\nexport class BrowserAnimationsModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [BrowserModule],\n  providers: BROWSER_ANIMATIONS_PROVIDERS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BrowserAnimationsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserAnimationsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserAnimationsModule.ctorParameters;\n}\n\n/**\n * \\@experimental Animation support is experimental.\n */\nexport class NoopAnimationsModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [BrowserModule],\n  providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NoopAnimationsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNoopAnimationsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNoopAnimationsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {AnimationBuilder} from '@angular/animations';\nimport {AnimationDriver, ɵAnimationEngine as AnimationEngine, ɵAnimationStyleNormalizer as AnimationStyleNormalizer, ɵDomAnimationEngine as DomAnimationEngine, ɵNoopAnimationDriver as NoopAnimationDriver, ɵNoopAnimationEngine as NoopAnimationEngine, ɵNoopAnimationStyleNormalizer as NoopAnimationStyleNormalizer, ɵWebAnimationsDriver as WebAnimationsDriver, ɵWebAnimationsStyleNormalizer as WebAnimationsStyleNormalizer, ɵsupportsWebAnimations as supportsWebAnimations} from '@angular/animations/browser';\nimport {Injectable, NgZone, Provider, RendererFactory2} from '@angular/core';\nimport {ɵDomRendererFactory2 as DomRendererFactory2} from '@angular/platform-browser';\n\nimport {BrowserAnimationBuilder, NoopAnimationBuilder} from './animation_builder';\nimport {AnimationRendererFactory} from './animation_renderer';\nexport class InjectableAnimationEngine extends DomAnimationEngine {\n/**\n * @param {?} driver\n * @param {?} normalizer\n */\nconstructor(driver: AnimationDriver, normalizer: AnimationStyleNormalizer) {\n    super(driver, normalizer);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AnimationDriver, },\n{type: AnimationStyleNormalizer, },\n];\n}\n\nfunction InjectableAnimationEngine_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectableAnimationEngine.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInjectableAnimationEngine.ctorParameters;\n}\n\nexport class InjectableNoopAnimationEngine extends NoopAnimationEngine {\n/**\n * @param {?} driver\n * @param {?} normalizer\n */\nconstructor(driver: AnimationDriver, normalizer: AnimationStyleNormalizer) {\n    super(driver, normalizer);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AnimationDriver, },\n{type: AnimationStyleNormalizer, },\n];\n}\n\nfunction InjectableNoopAnimationEngine_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectableNoopAnimationEngine.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInjectableNoopAnimationEngine.ctorParameters;\n}\n\n/**\n * @return {?}\n */\nexport function instantiateSupportedAnimationDriver() {\n  if (supportsWebAnimations()) {\n    return new WebAnimationsDriver();\n  }\n  return new NoopAnimationDriver();\n}\n/**\n * @return {?}\n */\nexport function instantiateDefaultStyleNormalizer() {\n  return new WebAnimationsStyleNormalizer();\n}\n/**\n * @param {?} renderer\n * @param {?} engine\n * @param {?} zone\n * @return {?}\n */\nexport function instantiateRendererFactory(\n    renderer: DomRendererFactory2, engine: AnimationEngine, zone: NgZone) {\n  return new AnimationRendererFactory(renderer, engine, zone);\n}\n\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nexport const /** @type {?} */ BROWSER_ANIMATIONS_PROVIDERS: Provider[] = [\n  {provide: AnimationBuilder, useClass: NoopAnimationBuilder},\n  {provide: AnimationDriver, useFactory: instantiateSupportedAnimationDriver},\n  {provide: AnimationStyleNormalizer, useFactory: instantiateDefaultStyleNormalizer},\n  {provide: AnimationEngine, useClass: InjectableAnimationEngine}, {\n    provide: RendererFactory2,\n    useFactory: instantiateRendererFactory,\n    deps: [DomRendererFactory2, AnimationEngine, NgZone]\n  }\n];\n\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nexport const /** @type {?} */ BROWSER_NOOP_ANIMATIONS_PROVIDERS: Provider[] = [\n  {provide: AnimationBuilder, useClass: BrowserAnimationBuilder},\n  {provide: AnimationDriver, useClass: NoopAnimationDriver},\n  {provide: AnimationStyleNormalizer, useFactory: instantiateDefaultStyleNormalizer}, {\n    provide: AnimationEngine,\n    useClass: NoopAnimationEngine,\n    deps: [AnimationDriver, AnimationStyleNormalizer]\n  },\n  {\n    provide: RendererFactory2,\n    useFactory: instantiateRendererFactory,\n    deps: [DomRendererFactory2, AnimationEngine, NgZone]\n  }\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationTriggerMetadata} from '@angular/animations';\nimport {ɵAnimationEngine as AnimationEngine} from '@angular/animations/browser';\nimport {Injectable, NgZone, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '@angular/core';\nexport class AnimationRendererFactory implements RendererFactory2 {\nprivate _currentId: number = 0;\n/**\n * @param {?} delegate\n * @param {?} _engine\n * @param {?} _zone\n */\nconstructor(\nprivate delegate: RendererFactory2,\nprivate _engine: AnimationEngine,\nprivate _zone: NgZone) {\n    _engine.onRemovalComplete = (element: any, delegate: any) => {\n      // Note: if an component element has a leave animation, and the component\n      // a host leave animation, the view engine will call `removeChild` for the parent\n      // component renderer as well as for the child component renderer.\n      // Therefore, we need to check if we already removed the element.\n      if (delegate && delegate.parentNode(element)) {\n        delegate.removeChild(element.parentNode, element);\n      }\n    };\n  }\n/**\n * @param {?} hostElement\n * @param {?} type\n * @return {?}\n */\ncreateRenderer(hostElement: any, type: RendererType2): Renderer2 {\n    let /** @type {?} */ delegate = this.delegate.createRenderer(hostElement, type);\n    if (!hostElement || !type || !type.data || !type.data['animation']) return delegate;\n\n    const /** @type {?} */ componentId = type.id;\n    const /** @type {?} */ namespaceId = type.id + '-' + this._currentId;\n    this._currentId++;\n\n    const /** @type {?} */ animationTriggers = /** @type {?} */(( type.data['animation'] as AnimationTriggerMetadata[]));\n    animationTriggers.forEach(\n        trigger => this._engine.registerTrigger(\n            componentId, namespaceId, hostElement, trigger.name, trigger));\n    return new AnimationRenderer(delegate, this._engine, this._zone, namespaceId);\n  }\n/**\n * @return {?}\n */\nbegin() { this.delegate.begin(); }\n/**\n * @return {?}\n */\nend() {\n    this._zone.runOutsideAngular(() => this._engine.flush());\n    this.delegate.end();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RendererFactory2, },\n{type: AnimationEngine, },\n{type: NgZone, },\n];\n}\n\nfunction AnimationRendererFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationRendererFactory.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAnimationRendererFactory.ctorParameters;\n/** @type {?} */\nAnimationRendererFactory.prototype._currentId;\n/** @type {?} */\nAnimationRendererFactory.prototype.delegate;\n/** @type {?} */\nAnimationRendererFactory.prototype._engine;\n/** @type {?} */\nAnimationRendererFactory.prototype._zone;\n}\n\nexport class AnimationRenderer implements Renderer2 {\npublic destroyNode: ((node: any) => any)|null = null;\nprivate _animationCallbacksBuffer: [(e: any) => any, any][] = [];\n/**\n * @param {?} delegate\n * @param {?} _engine\n * @param {?} _zone\n * @param {?} _namespaceId\n */\nconstructor(\npublic delegate: Renderer2,\nprivate _engine: AnimationEngine,\nprivate _zone: NgZone,\nprivate _namespaceId: string) {\n    this.destroyNode = this.delegate.destroyNode ? (n) => delegate.destroyNode !(n) : null;\n  }\n/**\n * @return {?}\n */\nget data() { return this.delegate.data; }\n/**\n * @return {?}\n */\ndestroy(): void {\n    this._engine.destroy(this._namespaceId, this.delegate);\n    this.delegate.destroy();\n  }\n/**\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string): any {\n    return this.delegate.createElement(name, namespace);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string): any { return this.delegate.createComment(value); }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string): any { return this.delegate.createText(value); }\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any): any {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any { return this.delegate.parentNode(node); }\n/**\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any): any { return this.delegate.nextSibling(node); }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string): void {\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string): void {\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string): void { this.delegate.addClass(el, name); }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string): void { this.delegate.removeClass(el, name); }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    this.delegate.setStyle(el, style, value, flags);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    this.delegate.removeStyle(el, style, flags);\n  }\n/**\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string): void { this.delegate.setValue(node, value); }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void {\n    this.delegate.appendChild(parent, newChild);\n    this._engine.onInsert(this._namespaceId, newChild, parent, false);\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    this.delegate.insertBefore(parent, newChild, refChild);\n    this._engine.onInsert(this._namespaceId, newChild, parent, true);\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    this._engine.onRemove(this._namespaceId, oldChild, this.delegate);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any): void {\n    if (name.charAt(0) == '@') {\n      name = name.substr(1);\n      this._engine.setProperty(this._namespaceId, el, name, value);\n    } else {\n      this.delegate.setProperty(el, name, value);\n    }\n  }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(target: 'window'|'document'|'body'|any, eventName: string, callback: (event: any) => any):\n      () => void {\n    if (eventName.charAt(0) == '@') {\n      const /** @type {?} */ element = resolveElementFromTarget(target);\n      let /** @type {?} */ name = eventName.substr(1);\n      let /** @type {?} */ phase = '';\n      if (name.charAt(0) != '@') {  // transition-specific\n        [name, phase] = parseTriggerCallbackName(name);\n      }\n      return this._engine.listen(this._namespaceId, element, name, phase, event => {\n        this._bufferMicrotaskIntoZone(callback, event);\n      });\n    }\n    return this.delegate.listen(target, eventName, callback);\n  }\n/**\n * @param {?} fn\n * @param {?} data\n * @return {?}\n */\nprivate _bufferMicrotaskIntoZone(fn: (e: any) => any, data: any) {\n    if (this._animationCallbacksBuffer.length == 0) {\n      Promise.resolve(null).then(() => {\n        this._zone.run(() => {\n          this._animationCallbacksBuffer.forEach(tuple => {\n            const [fn, data] = tuple;\n            fn(data);\n          });\n          this._animationCallbacksBuffer = [];\n        });\n      })\n    }\n\n    this._animationCallbacksBuffer.push([fn, data]);\n  }\n}\n\nfunction AnimationRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationRenderer.prototype.destroyNode;\n/** @type {?} */\nAnimationRenderer.prototype._animationCallbacksBuffer;\n/** @type {?} */\nAnimationRenderer.prototype.delegate;\n/** @type {?} */\nAnimationRenderer.prototype._engine;\n/** @type {?} */\nAnimationRenderer.prototype._zone;\n/** @type {?} */\nAnimationRenderer.prototype._namespaceId;\n}\n\n/**\n * @param {?} target\n * @return {?}\n */\nfunction resolveElementFromTarget(target: 'window' | 'document' | 'body' | any): any {\n  switch (target) {\n    case 'body':\n      return document.body;\n    case 'document':\n      return document;\n    case 'window':\n      return window;\n    default:\n      return target;\n  }\n}\n/**\n * @param {?} triggerName\n * @return {?}\n */\nfunction parseTriggerCallbackName(triggerName: string) {\n  const /** @type {?} */ dotIndex = triggerName.indexOf('.');\n  const /** @type {?} */ trigger = triggerName.substring(0, dotIndex);\n  const /** @type {?} */ phase = triggerName.substr(dotIndex + 1);\n  return [trigger, phase];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Animation, AnimationBuilder, AnimationMetadata, AnimationPlayer, NoopAnimationPlayer, sequence} from '@angular/animations';\nimport {Injectable, RendererFactory2, RendererType2, ViewEncapsulation} from '@angular/core';\n\nimport {AnimationRenderer} from './animation_renderer';\nexport class BrowserAnimationBuilder extends AnimationBuilder {\nprivate _nextAnimationId = 0;\nprivate _renderer: AnimationRenderer;\n/**\n * @param {?} rootRenderer\n */\nconstructor(rootRenderer: RendererFactory2) {\n    super();\n    const typeData = {\n      id: '0',\n      encapsulation: ViewEncapsulation.None,\n      styles: [],\n      data: {animation: []}\n    } as RendererType2;\n    this._renderer = rootRenderer.createRenderer(document.body, typeData) as AnimationRenderer;\n  }\n/**\n * @param {?} animation\n * @return {?}\n */\nbuild(animation: AnimationMetadata|AnimationMetadata[]): Animation {\n    const /** @type {?} */ id = this._nextAnimationId.toString();\n    this._nextAnimationId++;\n    const /** @type {?} */ entry = Array.isArray(animation) ? sequence(animation) : animation;\n    issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n    return new BrowserAnimation(id, this._renderer);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RendererFactory2, },\n];\n}\n\nfunction BrowserAnimationBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserAnimationBuilder.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserAnimationBuilder.ctorParameters;\n/** @type {?} */\nBrowserAnimationBuilder.prototype._nextAnimationId;\n/** @type {?} */\nBrowserAnimationBuilder.prototype._renderer;\n}\n\nexport class NoopAnimationBuilder extends BrowserAnimationBuilder {\n/**\n * @param {?} animation\n * @return {?}\n */\nbuild(animation: AnimationMetadata|AnimationMetadata): Animation { return new NoopAnimation(); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NoopAnimationBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nNoopAnimationBuilder.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNoopAnimationBuilder.ctorParameters;\n}\n\nexport class BrowserAnimation extends Animation {\n/**\n * @param {?} _id\n * @param {?} _renderer\n */\nconstructor(private _id: string,\nprivate _renderer: AnimationRenderer) { super(); }\n/**\n * @param {?} element\n * @param {?=} locals\n * @return {?}\n */\ncreate(element: any, locals?: {[key: string]: string | number}): AnimationPlayer {\n    return new RendererAnimationPlayer(this._id, element, locals || {}, this._renderer);\n  }\n}\n\nfunction BrowserAnimation_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserAnimation.prototype._id;\n/** @type {?} */\nBrowserAnimation.prototype._renderer;\n}\n\nexport class NoopAnimation extends Animation {\nconstructor() { super(); }\n/**\n * @param {?} element\n * @param {?=} locals\n * @return {?}\n */\ncreate(element: any, locals?: {[key: string]: string | number}): AnimationPlayer {\n    return new NoopAnimationPlayer();\n  }\n}\nexport class RendererAnimationPlayer implements AnimationPlayer {\npublic parentPlayer: AnimationPlayer|null = null;\nprivate _started = false;\n/**\n * @param {?} id\n * @param {?} element\n * @param {?} locals\n * @param {?} _renderer\n */\nconstructor(\npublic id: string,\npublic element: any, locals: {[key: string]: string | number},\nprivate _renderer: AnimationRenderer) {\n    this._command('create', locals);\n  }\n/**\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nprivate _listen(eventName: string, callback: (event: any) => any): () => void {\n    return this._renderer.listen(this.element, `@@${this.id}:${eventName}`, callback);\n  }\n/**\n * @param {?} command\n * @param {...?} args\n * @return {?}\n */\nprivate _command(command: string, ...args: any[]) {\n    return issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonDone(fn: () => void): void { this._listen('done', fn); }\n/**\n * @param {?} fn\n * @return {?}\n */\nonStart(fn: () => void): void { this._listen('start', fn); }\n/**\n * @param {?} fn\n * @return {?}\n */\nonDestroy(fn: () => void): void { this._listen('destroy', fn); }\n/**\n * @return {?}\n */\ninit(): void { this._command('init'); }\n/**\n * @return {?}\n */\nhasStarted(): boolean { return this._started; }\n/**\n * @return {?}\n */\nplay(): void {\n    this._command('play');\n    this._started = true;\n  }\n/**\n * @return {?}\n */\npause(): void { this._command('pause'); }\n/**\n * @return {?}\n */\nrestart(): void { this._command('restart'); }\n/**\n * @return {?}\n */\nfinish(): void { this._command('finish'); }\n/**\n * @return {?}\n */\ndestroy(): void { this._command('destroy'); }\n/**\n * @return {?}\n */\nreset(): void { this._command('reset'); }\n/**\n * @param {?} p\n * @return {?}\n */\nsetPosition(p: number): void { this._command('setPosition', p); }\n/**\n * @return {?}\n */\ngetPosition(): number { return 0; }\npublic totalTime = 0;\n}\n\nfunction RendererAnimationPlayer_tsickle_Closure_declarations() {\n/** @type {?} */\nRendererAnimationPlayer.prototype.parentPlayer;\n/** @type {?} */\nRendererAnimationPlayer.prototype._started;\n/** @type {?} */\nRendererAnimationPlayer.prototype.totalTime;\n/** @type {?} */\nRendererAnimationPlayer.prototype.id;\n/** @type {?} */\nRendererAnimationPlayer.prototype.element;\n/** @type {?} */\nRendererAnimationPlayer.prototype._renderer;\n}\n\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} id\n * @param {?} command\n * @param {?} args\n * @return {?}\n */\nfunction issueAnimationCommand(\n    renderer: AnimationRenderer, element: any, id: string, command: string, args: any[]): any {\n  return renderer.setProperty(element, `@@${id}:${command}`, args);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["DomRendererFactory2","ɵAnimationStyleNormalizer","ɵNoopAnimationEngine","ɵAnimationEngine","AnimationDriver","ɵNoopAnimationDriver","AnimationBuilder","Injectable","ɵDomAnimationEngine","Animation","sequence","ViewEncapsulation"],"mappings":"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"}
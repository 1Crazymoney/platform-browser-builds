{"version":3,"file":"testability.js","sourceRoot":"","sources":["../../../../../modules/@angular/platform-browser/src/browser/testability.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {GetTestability, Injectable, Testability, TestabilityRegistry, setTestabilityGetter} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\nimport {ListWrapper} from '../facade/collection';\nimport {global, isPresent} from '../facade/lang';\n\nexport class BrowserGetTestability implements GetTestability {\n  static init() { setTestabilityGetter(new BrowserGetTestability()); }\n\n  addToWindow(registry: TestabilityRegistry): void {\n    global.getAngularTestability = (elem: any, findInAncestors: boolean = true) => {\n      var testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new Error('Could not find testability for element.');\n      }\n      return testability;\n    };\n\n    global.getAllAngularTestabilities = () => { return registry.getAllTestabilities(); };\n\n    global.getAllAngularRootElements = () => registry.getAllRootElements();\n\n    var whenAllStable = (callback: any /** TODO #9100 */) => {\n      var testabilities = global.getAllAngularTestabilities();\n      var count = testabilities.length;\n      var didWork = false;\n      var decrement = function(didWork_: any /** TODO #9100 */) {\n        didWork = didWork || didWork_;\n        count--;\n        if (count == 0) {\n          callback(didWork);\n        }\n      };\n      testabilities.forEach(function(testability: any /** TODO #9100 */) {\n        testability.whenStable(decrement);\n      });\n    };\n\n    if (!global['frameworkStabilizers']) {\n      global['frameworkStabilizers'] = ListWrapper.createGrowableSize(0);\n    }\n    global['frameworkStabilizers'].push(whenAllStable);\n  }\n\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability {\n    if (elem == null) {\n      return null;\n    }\n    var t = registry.getTestability(elem);\n    if (isPresent(t)) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (getDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n    }\n    return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
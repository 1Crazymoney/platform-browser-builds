{"version":3,"sources":["../../../../../../modules/@angular/platform-browser/src/dom/events/dom_events.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;OAEI,EAAA,UAAE,EAAU,MAAA,eAAA;OACZ,EAAA,kBAAE,EAAkB,MAAA,iBAAA;AAC3B;IAEC,mCAAA;IAFD;QAEC,8BAAA;IAoBD,CAAC;IArBD;;;OAGG;IACH,kCAAG,GAAH,UAAG,SAAA,IAAsC,MAAA,CAAO,IAAA,CAAK,CAAC,CAAA;IACtD;;;;;OAKG;IACH,0CALG,GAKH,UALG,OAAA,EAAA,SAAA,EAAA,OAAA;QAMC,OAAO,CALC,gBAAC,CAAgB,SAAC,EAAS,gBAAA,CAAA,CAAC,OAAW,CAAA,EAAK,KAAA,CAAM,CAAC;QAM3D,MAAM,CALC,cAAM,OAAA,OAAA,CAAQ,mBAAC,CAAmB,SAAC,EAAS,gBAAA,CAAA,CAAC,OAAW,CAAA,EAAK,KAAA,CAAM,EAA7D,CAA6D,CAAC;IAM7E,CAAC;IAJI,0BAAA,GAAoC;QAM3C,EALE,IAAA,EAAM,UAAA,EAAW;KAMlB,CALC;IAMF,kBAAkB;IAJX,8BAAA,GAAiF,cAAM,OAAA,EAM7F,EAN6F,CAM7F,CALC;IAMF,sBAAC;AAAD,CAtBA,AAsBC,CApBA,kBAAA,GAoBA;AAED;IACA,gBAAgB;IAChB,eAAe,CAAC,UAAU,CAAC;IAC3B;;;OAGG;IACH,eAAe,CAAC,cAAc,CAAC;AAC/B,CAAC","file":"dom_events.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {EventManagerPlugin} from './event_manager';\nexport class DomEventsPlugin extends EventManagerPlugin {\n/**\n * @param {?} eventName\n * @return {?}\n */\nsupports(eventName: string): boolean { return true; }\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    element.addEventListener(eventName, /** @type {?} */(( handler as any)), false);\n    return () => element.removeEventListener(eventName, /** @type {?} */(( handler as any)), false);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DomEventsPlugin_tsickle_Closure_declarations() {\n/** @type {?} */\nDomEventsPlugin.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDomEventsPlugin.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
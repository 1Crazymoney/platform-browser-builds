{"version":3,"sources":["../../../../../../modules/@angular/platform-browser/src/dom/debug/by.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAIH,OAAO,EAAA,MAAE,EAAM,MAAA,uBAAA,CAAA;AAEf,OAAO,EAAA,SAAE,EAAS,MAAA,mBAAA,CAAA;AAClB;;;;GAIG;AACH,MAGC;IAFD;;;;;;;OAOG;IACH,MAEG,CAAA,GAAA,KAAuC,MAAA,CAAO,CAAA,YAAE,KAAgB,IAAA,CAAK,CAAC,CAAA;IADzE;;;;;;;;OAQG;IACH,MACG,CAAA,GAAA,CAAA,QAAA;QAAC,MAAM,CACC,CAAA,YAAE;YAAP,MAAM,CACC,SAAA,CAAU,YAAC,CAAY,aAAC,CAAa;gBAAxC,MAAM,EACC,CAAE,cAAC,CAAc,YAAC,CAAY,aAAC,EAAc,QAAA,CAAS;gBAA7D,KAAK,CACC;QAAZ,CAAC,CACC;IAAJ,CAAC;IACH;;;;;;;;OAQG;IACH,MAAG,CAAA,SAAA,CAAA,IAAA;QACC,MAAM,CAAC,CAAA,YAAE,KAAgB,YAAA,CAAa,cAAC,CAAc,OAAC,CAAO,IAAC,CAAI,KAAK,CAAA,CAAE,CAAC;IAC5E,CAAC;CACF","file":"by.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DebugElement, Type} from '@angular/core/index';\n\nimport {getDOM} from '../../dom/dom_adapter';\nimport {Predicate} from '../../facade/collection';\nimport {isPresent} from '../../facade/lang';\n/**\n * Predicates for use with {\\@link DebugElement}'s query functions.\n * \n * \\@experimental All debugging apis are currently experimental.\n */\nexport class By {\n/**\n * Match all elements.\n * \n * ## Example\n * \n * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n * @return {?}\n */\nstatic all(): Predicate<DebugElement> { return (debugElement) => true; }\n/**\n * Match elements by the given CSS selector.\n * \n * ## Example\n * \n * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n * @param {?} selector\n * @return {?}\n */\nstatic css(selector: string): Predicate<DebugElement> {\n    return (debugElement) => {\n      return isPresent(debugElement.nativeElement) ?\n          getDOM().elementMatches(debugElement.nativeElement, selector) :\n          false;\n    };\n  }\n/**\n * Match elements that have the given directive present.\n * \n * ## Example\n * \n * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n * @param {?} type\n * @return {?}\n */\nstatic directive(type: Type<any>): Predicate<DebugElement> {\n    return (debugElement) => debugElement.providerTokens.indexOf(type) !== -1;\n  }\n}\n"]}